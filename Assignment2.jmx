<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">pxp-qa.contentserv.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JSESSIONID" elementType="Argument">
            <stringProp name="Argument.name">JSESSIONID</stringProp>
            <stringProp name="Argument.value">A07484CECF8FAE2118BC4BF0F3ACE9E0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_fbp" elementType="Argument">
            <stringProp name="Argument.name">_fbp</stringProp>
            <stringProp name="Argument.value">fb.1.1562401208620.442506737	</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_ga&#x9;" elementType="Argument">
            <stringProp name="Argument.name">_ga	</stringProp>
            <stringProp name="Argument.value">GA1.2.1922607507.1544372790	</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_gcl_au&#x9;" elementType="Argument">
            <stringProp name="Argument.name">_gcl_au	</stringProp>
            <stringProp name="Argument.value">1.1.1368171357.1562401208	</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Argument">
            <stringProp name="Argument.name">Accept</stringProp>
            <stringProp name="Argument.value">application/json, text/plain, */*</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userId" elementType="Argument">
            <stringProp name="Argument.name">userId</stringProp>
            <stringProp name="Argument.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="processData" elementType="Argument">
            <stringProp name="Argument.name">processData</stringProp>
            <stringProp name="Argument.value">undefined</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="instanceID" elementType="Argument">
            <stringProp name="Argument.name">instanceID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Origin" elementType="Argument">
            <stringProp name="Argument.name">Origin</stringProp>
            <stringProp name="Argument.value">https://pxp-qa.contentserv.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LoginId" elementType="Argument">
            <stringProp name="Argument.name">LoginId</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Content-Type" elementType="Argument">
            <stringProp name="Argument.name">Content-Type</stringProp>
            <stringProp name="Argument.value">application/x-www-form-urlencoded</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jsonData" elementType="Argument">
            <stringProp name="Argument.name">jsonData</stringProp>
            <stringProp name="Argument.value">{   &quot;baseType&quot;: &quot;com.cs.runtime.interactor.entity.ArticleInstance&quot;,   &quot;id&quot;: &quot;34237207-12fd-479d-bbed-f4fcd21f6dd2&quot;,   &quot;versionId&quot;: 2,   &quot;versionTimestamp&quot;: 1563739691505,   &quot;lastModifiedBy&quot;: &quot;admin&quot;,   &quot;createdBy&quot;: &quot;admin&quot;,   &quot;createdOn&quot;: 1563737907443,   &quot;lastModified&quot;: 1563739691505,   &quot;jobId&quot;: null,   &quot;componentId&quot;: null,   &quot;roles&quot;: [        ],   &quot;types&quot;: [     &quot;single_article&quot;   ],   &quot;taxonomyIds&quot;: [        ],   &quot;selectedTaxonomyIds&quot;: [        ],   &quot;organizationId&quot;: &quot;-1&quot;,   &quot;physicalCatalogId&quot;: &quot;pim&quot;,   &quot;portalId&quot;: null,   &quot;logicalCatalogId&quot;: &quot;-1&quot;,   &quot;systemId&quot;: null,   &quot;endpointId&quot;: &quot;-1&quot;,   &quot;originalInstanceId&quot;: &quot;34237207-12fd-479d-bbed-f4fcd21f6dd2&quot;,   &quot;defaultAssetInstanceId&quot;: null,   &quot;branchOf&quot;: &quot;-1&quot;,   &quot;versionOf&quot;: null,   &quot;ruleViolation&quot;: [        ],   &quot;messages&quot;: {     &quot;notificationsCounter&quot;: 0,     &quot;isRed&quot;: false,     &quot;isOrange&quot;: false,     &quot;isYellow&quot;: false,     &quot;isGreen&quot;: true,     &quot;redCount&quot;: 0,     &quot;orangeCount&quot;: 0,     &quot;yellowCount&quot;: 0,     &quot;validityMessage&quot;: null,     &quot;shouldViolationCount&quot;: 0,     &quot;mandatoryViolationCount&quot;: 0,     &quot;isUniqueViolationCount&quot;: 0,     &quot;id&quot;: null,     &quot;versionId&quot;: null,     &quot;versionTimestamp&quot;: null,     &quot;lastModifiedBy&quot;: null   },   &quot;context&quot;: null,   &quot;summary&quot;: null,   &quot;partnerSources&quot;: [     {       &quot;organizationId&quot;: &quot;-1&quot;,       &quot;physicalCatalogId&quot;: &quot;pim&quot;,       &quot;portalId&quot;: &quot;pim&quot;,       &quot;logicalCatalogId&quot;: &quot;-1&quot;,       &quot;systemId&quot;: null,       &quot;endpointId&quot;: &quot;&quot;,       &quot;id&quot;: null,       &quot;versionId&quot;: null,       &quot;versionTimestamp&quot;: null,       &quot;lastModifiedBy&quot;: null     }   ],   &quot;hiddenSummary&quot;: {     &quot;attributeIds&quot;: [            ],     &quot;tagIds&quot;: [            ],     &quot;dependentAttributeIdsMap&quot;: {            }   },   &quot;klassInstanceId&quot;: null,   &quot;parentId&quot;: null,   &quot;path&quot;: [        ],   &quot;relationships&quot;: [        ],   &quot;variants&quot;: [        ],   &quot;attributeVariants&quot;: [        ],   &quot;languageInstances&quot;: [     {       &quot;languageCode&quot;: &quot;en_US&quot;,       &quot;versionId&quot;: 1     }   ],   &quot;languageCodes&quot;: [     &quot;en_US&quot;   ],   &quot;creationLanguage&quot;: &quot;en_US&quot;,   &quot;isEmbedded&quot;: false,   &quot;relationshipConflictingValues&quot;: [        ],   &quot;isMerged&quot;: false,   &quot;references&quot;: [        ],   &quot;addedAssets&quot;: [        ],   &quot;deletedAssets&quot;: [        ],   &quot;natureReferences&quot;: [        ],   &quot;globalPermission&quot;: {     &quot;id&quot;: null,     &quot;canRead&quot;: true,     &quot;canEdit&quot;: true,     &quot;canDelete&quot;: true,     &quot;canCreate&quot;: true,     &quot;canDownload&quot;: true,     &quot;type&quot;: null,     &quot;code&quot;: null,     &quot;roleId&quot;: null,     &quot;entityId&quot;: null,     &quot;versionId&quot;: null,     &quot;versionTimestamp&quot;: null,     &quot;lastModifiedBy&quot;: null   },   &quot;__NATURE_KLASS_ID&quot;: &quot;single_article&quot;,   &quot;isDirty&quot;: true,   &quot;addedAttributes&quot;: [        ],   &quot;deletedAttributes&quot;: [        ],   &quot;modifiedAttributes&quot;: [     {       &quot;baseType&quot;: &quot;com.cs.runtime.interactor.entity.AttributeInstance&quot;,       &quot;id&quot;: &quot;84605aa5-84ed-45ea-882e-6f8fb80db333&quot;,       &quot;versionId&quot;: 0,       &quot;versionTimestamp&quot;: 1563739691496,       &quot;lastModifiedBy&quot;: &quot;admin&quot;,       &quot;createdBy&quot;: &quot;admin&quot;,       &quot;createdOn&quot;: 1563737907442,       &quot;lastModified&quot;: 1563739691496,       &quot;jobId&quot;: null,       &quot;klassInstanceVersion&quot;: null,       &quot;notification&quot;: null,       &quot;klassInstanceId&quot;: &quot;34237207-12fd-479d-bbed-f4fcd21f6dd2&quot;,       &quot;variantInstanceId&quot;: null,       &quot;attributeId&quot;: &quot;minimumpriceattribute&quot;,       &quot;value&quot;: &quot;322&quot;,       &quot;valueAsNumber&quot;: 3123,       &quot;valueAsHtml&quot;: &quot;&quot;,       &quot;valueAsExpression&quot;: null,       &quot;isMandatoryViolated&quot;: false,       &quot;isShouldViolated&quot;: false,       &quot;conflictingValues&quot;: [                ],       &quot;isMatchAndMerge&quot;: false,       &quot;originalInstanceId&quot;: null,       &quot;duplicateStatus&quot;: [                ],       &quot;isUnique&quot;: -1,       &quot;isConflictResolved&quot;: false,       &quot;code&quot;: &quot;minimumpriceattribute&quot;,       &quot;language&quot;: null,       &quot;isValueChanged&quot;: true,       &quot;addedTags&quot;: [                ],       &quot;modifiedTags&quot;: [                ],       &quot;deletedTags&quot;: [                ],       &quot;modifiedContext&quot;: null     },     {       &quot;baseType&quot;: &quot;com.cs.runtime.interactor.entity.AttributeInstance&quot;,       &quot;id&quot;: &quot;d154d905-a760-4aa3-ada6-8f02094918f3&quot;,       &quot;versionId&quot;: 0,       &quot;versionTimestamp&quot;: 1563739691496,       &quot;lastModifiedBy&quot;: &quot;admin&quot;,       &quot;createdBy&quot;: &quot;admin&quot;,       &quot;createdOn&quot;: 1563737907442,       &quot;lastModified&quot;: 1563739691496,       &quot;jobId&quot;: null,       &quot;klassInstanceVersion&quot;: null,       &quot;notification&quot;: null,       &quot;klassInstanceId&quot;: &quot;34237207-12fd-479d-bbed-f4fcd21f6dd2&quot;,       &quot;variantInstanceId&quot;: null,       &quot;attributeId&quot;: &quot;listpriceattribute&quot;,       &quot;value&quot;: &quot;232133&quot;,       &quot;valueAsNumber&quot;: 23213,       &quot;valueAsHtml&quot;: &quot;&quot;,       &quot;valueAsExpression&quot;: null,       &quot;isMandatoryViolated&quot;: false,       &quot;isShouldViolated&quot;: false,       &quot;conflictingValues&quot;: [                ],       &quot;isMatchAndMerge&quot;: false,       &quot;originalInstanceId&quot;: null,       &quot;duplicateStatus&quot;: [                ],       &quot;isUnique&quot;: -1,       &quot;isConflictResolved&quot;: false,       &quot;code&quot;: &quot;listpriceattribute&quot;,       &quot;language&quot;: null,       &quot;isValueChanged&quot;: true,       &quot;addedTags&quot;: [                ],       &quot;modifiedTags&quot;: [                ],       &quot;deletedTags&quot;: [                ],       &quot;modifiedContext&quot;: null     },     {       &quot;baseType&quot;: &quot;com.cs.runtime.interactor.entity.AttributeInstance&quot;,       &quot;id&quot;: &quot;113196b5-9e22-466f-b50e-0e17fbf82f78&quot;,       &quot;versionId&quot;: 0,       &quot;versionTimestamp&quot;: 1563739691496,       &quot;lastModifiedBy&quot;: &quot;admin&quot;,       &quot;createdBy&quot;: &quot;admin&quot;,       &quot;createdOn&quot;: 1563737907442,       &quot;lastModified&quot;: 1563739691496,       &quot;jobId&quot;: null,       &quot;klassInstanceVersion&quot;: null,       &quot;notification&quot;: null,       &quot;klassInstanceId&quot;: &quot;34237207-12fd-479d-bbed-f4fcd21f6dd2&quot;,       &quot;variantInstanceId&quot;: null,       &quot;attributeId&quot;: &quot;sellingpriceattribute&quot;,       &quot;value&quot;: &quot;132233&quot;,       &quot;valueAsNumber&quot;: 13223,       &quot;valueAsHtml&quot;: &quot;&quot;,       &quot;valueAsExpression&quot;: null,       &quot;isMandatoryViolated&quot;: false,       &quot;isShouldViolated&quot;: false,       &quot;conflictingValues&quot;: [                ],       &quot;isMatchAndMerge&quot;: false,       &quot;originalInstanceId&quot;: null,       &quot;duplicateStatus&quot;: [                ],       &quot;isUnique&quot;: -1,       &quot;isConflictResolved&quot;: false,       &quot;code&quot;: &quot;sellingpriceattribute&quot;,       &quot;language&quot;: null,       &quot;isValueChanged&quot;: true,       &quot;addedTags&quot;: [                ],       &quot;modifiedTags&quot;: [                ],       &quot;deletedTags&quot;: [                ],       &quot;modifiedContext&quot;: null     }   ],   &quot;addedTags&quot;: [        ],   &quot;deletedTags&quot;: [        ],   &quot;modifiedTags&quot;: [     {       &quot;baseType&quot;: &quot;com.cs.runtime.interactor.entity.TagInstance&quot;,       &quot;id&quot;: &quot;68cf0b3d-2bab-4be5-b3bc-ceb9cf39eca4&quot;,       &quot;versionId&quot;: 0,       &quot;versionTimestamp&quot;: 1563737907442,       &quot;lastModifiedBy&quot;: &quot;admin&quot;,       &quot;createdBy&quot;: &quot;admin&quot;,       &quot;createdOn&quot;: 1563737907442,       &quot;lastModified&quot;: 1563737907442,       &quot;jobId&quot;: null,       &quot;klassInstanceVersion&quot;: null,       &quot;notification&quot;: null,       &quot;klassInstanceId&quot;: &quot;34237207-12fd-479d-bbed-f4fcd21f6dd2&quot;,       &quot;variantInstanceId&quot;: null,       &quot;tagId&quot;: &quot;statustag&quot;,       &quot;variantOf&quot;: null,       &quot;conflictingValues&quot;: [                ],       &quot;isMatchAndMerge&quot;: false,       &quot;isMandatoryViolated&quot;: false,       &quot;contextInstanceId&quot;: null,       &quot;isShouldViolated&quot;: false,       &quot;isConflictResolved&quot;: false,       &quot;isValueChanged&quot;: true,       &quot;addedTagValues&quot;: [         {           &quot;id&quot;: &quot;52ea0c5f-d1cf-44a6-9504-7b9ca060db8d&quot;,           &quot;tagId&quot;: &quot;blockedfromplanning&quot;,           &quot;relevance&quot;: 100,           &quot;timestamp&quot;: 1563739560724         }       ],       &quot;modifiedTagValues&quot;: [                ],       &quot;deletedTagValues&quot;: [                ],       &quot;addedTags&quot;: [                ],       &quot;modifiedTags&quot;: [                ],       &quot;deletedTags&quot;: [                ]     }   ],   &quot;addedRelationships&quot;: [        ],   &quot;deletedRelationships&quot;: [        ],   &quot;modifiedRelationships&quot;: [        ],   &quot;addedNatureRelationships&quot;: [        ],   &quot;deletedNatureRelationships&quot;: [        ],   &quot;modifiedNatureRelationships&quot;: [        ],   &quot;modifiedAssets&quot;: [        ],   &quot;addedLinkedInstances&quot;: [        ],   &quot;deletedLinkedInstances&quot;: [        ],   &quot;getKlassInstanceTreeInfo&quot;: {     &quot;attributes&quot;: [            ],     &quot;tags&quot;: [            ],     &quot;allSearch&quot;: &quot;&quot;,     &quot;size&quot;: 20,     &quot;from&quot;: 0,     &quot;isAttribute&quot;: false,     &quot;isNumeric&quot;: false,     &quot;selectedRoles&quot;: [            ],     &quot;selectedTypes&quot;: [            ],     &quot;isRed&quot;: false,     &quot;isOrange&quot;: false,     &quot;isYellow&quot;: false,     &quot;isGreen&quot;: false   },   &quot;tabType&quot;: &quot;com.cs.config.interactor.entity.template.CustomTemplateTab&quot;,   &quot;tabId&quot;: &quot;property_collection_tab&quot;,   &quot;typeId&quot;: null,   &quot;templateId&quot;: null,   &quot;isLinked&quot;: true,   &quot;isSaveAndPublish&quot;: true }</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
      </CacheManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers"/>
      </HeaderManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/Users/hrishikesh.joshi/Downloads/User.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">userName,password,loginID,sessionId,requestId,organizationId</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Login" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="organizationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">organizationId</stringProp>
                </elementProp>
                <elementProp name="endpointType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endpointType</stringProp>
                </elementProp>
                <elementProp name="physicalCatalogId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">physicalCatalogId</stringProp>
                </elementProp>
                <elementProp name="requestId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">requestId</stringProp>
                </elementProp>
                <elementProp name="endpointId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endpointId</stringProp>
                </elementProp>
                <elementProp name="portalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">portalId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${sessionId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                </elementProp>
                <elementProp name="dataLanguage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">dataLanguage</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">LoginId</stringProp>
              <stringProp name="RegexExtractor.regex">(?:&quot;login&quot;:&quot;)(.*?)(?:&quot;)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String org=organizationId.toStrjng();
vars.put(&quot;Organization&quot;,org)</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Config Language Info" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;isGetDataLanguages&quot;:true,&quot;isGetUILanguages&quot;:true,&quot;dataLanguage&quot;:&quot;en_US&quot;,&quot;uiLanguage&quot;:&quot;en_US&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/config/languagesinfo?sessionId=${sessionId}&amp;requestId=a8535fef-0bbe-44d6-9aca-9a808cfa3695&amp;lang=en_US&amp;organizationId=&amp;physicalCatalogId=&amp;portalId=&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Runtime Statistic" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;language&quot;:&quot;en_US&quot;,&quot;screens&quot;:[&quot;home&quot;,&quot;view&quot;,&quot;dashboard&quot;,&quot;content&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/statictranslations/get?sessionId=${sessionId}&amp;requestId=2d0d8e6d-9e03-4c7d-908a-3af1262235f1&amp;lang=en_US&amp;organizationId=&amp;physicalCatalogId=&amp;portalId=&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Runtime Dashbord tile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;physicalCatalogId&quot;:&quot;pim&quot;,&quot;organizationId&quot;:&quot;${organizationId}&quot;,&quot;sortOptions&quot;:[{&quot;sortField&quot;:&quot;lastmodifiedattribute&quot;,&quot;sortOrder&quot;:&quot;desc&quot;,&quot;isNumeric&quot;:true}],&quot;moduleId&quot;:&quot;allmodule&quot;,&quot;from&quot;:0,&quot;size&quot;:10}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/dashboardtile/info?sessionId=${sessionId}&amp;requestId=18031d03-68ad-417b-89ca-b87ce6621134&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard Tile info" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;physicalCatalogId&quot;:&quot;pim&quot;,&quot;organizationId&quot;:&quot;${organizationId}&quot;,&quot;sortOptions&quot;:[{&quot;sortField&quot;:&quot;createdonattribute&quot;,&quot;sortOrder&quot;:&quot;desc&quot;,&quot;isNumeric&quot;:true}],&quot;moduleId&quot;:&quot;allmodule&quot;,&quot;from&quot;:0,&quot;size&quot;:10}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/dashboardtile/info?sessionId=${sessionId}&amp;requestId=18031d03-68ad-417b-89ca-b87ce6621134&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Rule violation Info" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;physicalCatalogId&quot;:&quot;pim&quot;,&quot;organizationId&quot;:&quot;${organizationId}&quot;,&quot;moduleId&quot;:&quot;allmodule&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/dashboardtile/ruleviolationinfo?sessionId=${sessionId}&amp;requestId=18031d03-68ad-417b-89ca-b87ce6621134&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Product" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move from Dashboard to Product" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;attributes&quot;:[],&quot;tags&quot;:[],&quot;allSearch&quot;:&quot;&quot;,&quot;selectedCampaigns&quot;:[],&quot;size&quot;:20,&quot;from&quot;:0,&quot;sortOptions&quot;:[],&quot;getFolders&quot;:true,&quot;getLeaves&quot;:true,&quot;selectedRoles&quot;:[],&quot;selectedTypes&quot;:[],&quot;selectedTaxonomyIds&quot;:[],&quot;parentTaxonomyId&quot;:&quot;&quot;,&quot;clickedTaxonomyId&quot;:&quot;&quot;,&quot;moduleId&quot;:&quot;pimmodule&quot;,&quot;isRed&quot;:true,&quot;isOrange&quot;:true,&quot;isYellow&quot;:true,&quot;isGreen&quot;:true,&quot;logicalCatalogId&quot;:&quot;&quot;,&quot;systemId&quot;:&quot;&quot;,&quot;physicalCatalogId&quot;:&quot;pim&quot;,&quot;organizationId&quot;:&quot;${organizationId}&quot;,&quot;endpointId&quot;:&quot;&quot;,&quot;isArchivePortal&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/instancetree/-1?sessionId=${sessionId}&amp;requestId=25e632ee-a090-478c-bd74-99c7bc219235&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Article Creation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;parentId&quot;:-1,&quot;type&quot;:&quot;single_article&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/klassinstances?lang=en_US&amp;sessionId=${sessionId}&amp;requestId=f580b19d-6570-460a-bd3d-9ef0d2579641&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">instanceID</stringProp>
              <stringProp name="RegexExtractor.regex">(?:&quot;originalInstanceId&quot;:&quot;)(.*?)(?:&quot;)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.eclipsesource.json.*;

try{
	String resCode  = prev.getResponseCode();

	 log.info(&quot;Test1&quot;);
	String JsonResponseString = prev.getResponseDataAsString();
		 log.info(&quot;Test2&quot;);
 	JsonObject resInstance = Json.parse(JsonResponseString).asObject();
	 log.info(&quot;Test3&quot;);


	log.info(resCode);
     if(resCode.equals(&quot;200&quot;))
	{
		log.info(&quot;Inside if&quot;);
		//String Test=resInstance.getString(&quot;success&quot;);
					 //log.info(Test 7);
		JsonObject Success=resInstance.get(&quot;success&quot;).asObject();
		//JsonObject Success = Json.parse(Test).asObject();
			 log.info(&quot;Test8&quot;);
		//instanceID=Success.get(&quot;id&quot;);
			// log.info(&quot;Test9&quot;);
		String ID=Success.get(&quot;id&quot;).toString();
		String ID2=Success.get(&quot;id&quot;).toString().replaceAll(&quot;^\&quot;|\&quot;$&quot;,&quot;&quot;);
		//log.info(instanceID);
	vars.put(&quot;ArtcileID&quot;,ID);
	vars.put(&quot;AID&quot;,ID2);
	//log.info(vars.get(&quot;ArtcileID&quot;));
	log.info(&quot;Final&quot;);
	}
}
catch(Exception ex)
{
	log.info(&quot;Error:&quot;+ex.getMessage());
}
	</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Article Overview tab" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:20,&quot;from&quot;:0,&quot;sortField&quot;:&quot;createdOn&quot;,&quot;sortOrder&quot;:&quot;desc&quot;,&quot;templateId&quot;:null,&quot;typeId&quot;:null,&quot;tabId&quot;:null,&quot;tabType&quot;:&quot;com.cs.config.interactor.entity.template.CustomTemplateTab&quot;,&quot;childContextId&quot;:null,&quot;selectedTimeRange&quot;:{&quot;endTime&quot;:null,&quot;startTime&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/klassinstances/overviewtab/${AID}?isLoadMore=false&amp;getAll=true&amp;sessionId=${sessionId}&amp;requestId=f580b19d-6570-460a-bd3d-9ef0d2579641&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Artcle Custom tab" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;size&quot;:20,&quot;from&quot;:0,&quot;sortField&quot;:&quot;createdOn&quot;,&quot;sortOrder&quot;:&quot;desc&quot;,&quot;templateId&quot;:null,&quot;typeId&quot;:null,&quot;tabId&quot;:&quot;property_collection_tab&quot;,&quot;tabType&quot;:&quot;com.cs.config.interactor.entity.template.CustomTemplateTab&quot;,&quot;childContextId&quot;:null,&quot;selectedTimeRange&quot;:{&quot;endTime&quot;:null,&quot;startTime&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/klassinstances/customtab/${AID}?isLoadMore=false&amp;getAll=true&amp;sessionId=${sessionId}&amp;requestId=411a0181-d38d-403f-8cb5-29fa949e65b7&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save Changes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;baseType&quot;:&quot;com.cs.runtime.interactor.entity.ArticleInstance&quot;,&quot;id&quot;:${ArtcileID},&quot;versionId&quot;:0,&quot;versionTimestamp&quot;:1563790033701,&quot;lastModifiedBy&quot;:&quot;admin&quot;,&quot;createdBy&quot;:&quot;admin&quot;,&quot;createdOn&quot;:1563790033696,&quot;lastModified&quot;:1563790033696,&quot;jobId&quot;:null,&quot;name&quot;:&quot;Test&quot;,&quot;componentId&quot;:null,&quot;roles&quot;:[],&quot;types&quot;:[&quot;single_article&quot;],&quot;taxonomyIds&quot;:[],&quot;selectedTaxonomyIds&quot;:[],&quot;organizationId&quot;:&quot;${organizationId}&quot;,&quot;physicalCatalogId&quot;:&quot;pim&quot;,&quot;portalId&quot;:null,&quot;logicalCatalogId&quot;:&quot;-1&quot;,&quot;systemId&quot;:null,&quot;endpointId&quot;:&quot;-1&quot;,&quot;originalInstanceId&quot;:${ArtcileID},&quot;defaultAssetInstanceId&quot;:null,&quot;branchOf&quot;:&quot;-1&quot;,&quot;versionOf&quot;:null,&quot;ruleViolation&quot;:[],&quot;messages&quot;:{&quot;notificationsCounter&quot;:0,&quot;isRed&quot;:false,&quot;isOrange&quot;:false,&quot;isYellow&quot;:false,&quot;isGreen&quot;:true,&quot;redCount&quot;:0,&quot;orangeCount&quot;:0,&quot;yellowCount&quot;:0,&quot;validityMessage&quot;:null,&quot;shouldViolationCount&quot;:0,&quot;mandatoryViolationCount&quot;:0,&quot;isUniqueViolationCount&quot;:0,&quot;id&quot;:null,&quot;versionId&quot;:null,&quot;versionTimestamp&quot;:null,&quot;lastModifiedBy&quot;:null},&quot;context&quot;:null,&quot;summary&quot;:null,&quot;partnerSources&quot;:[{&quot;organizationId&quot;:&quot;${organizationId}&quot;,&quot;physicalCatalogId&quot;:&quot;pim&quot;,&quot;portalId&quot;:&quot;pim&quot;,&quot;logicalCatalogId&quot;:&quot;-1&quot;,&quot;systemId&quot;:null,&quot;endpointId&quot;:&quot;&quot;,&quot;id&quot;:null,&quot;versionId&quot;:null,&quot;versionTimestamp&quot;:null,&quot;lastModifiedBy&quot;:null}],&quot;hiddenSummary&quot;:{&quot;attributeIds&quot;:[],&quot;tagIds&quot;:[],&quot;dependentAttributeIdsMap&quot;:{}},&quot;klassInstanceId&quot;:null,&quot;parentId&quot;:null,&quot;path&quot;:[],&quot;relationships&quot;:[],&quot;variants&quot;:[],&quot;attributeVariants&quot;:[],&quot;languageInstances&quot;:[{&quot;languageCode&quot;:&quot;en_US&quot;,&quot;versionId&quot;:0}],&quot;languageCodes&quot;:[&quot;en_US&quot;],&quot;creationLanguage&quot;:&quot;en_US&quot;,&quot;isEmbedded&quot;:false,&quot;relationshipConflictingValues&quot;:[],&quot;isMerged&quot;:false,&quot;references&quot;:[],&quot;addedAssets&quot;:[],&quot;deletedAssets&quot;:[],&quot;natureReferences&quot;:[],&quot;globalPermission&quot;:{&quot;id&quot;:null,&quot;canRead&quot;:true,&quot;canEdit&quot;:true,&quot;canDelete&quot;:true,&quot;canCreate&quot;:true,&quot;canDownload&quot;:true,&quot;type&quot;:null,&quot;code&quot;:null,&quot;roleId&quot;:null,&quot;entityId&quot;:null,&quot;versionId&quot;:null,&quot;versionTimestamp&quot;:null,&quot;lastModifiedBy&quot;:null},&quot;__NATURE_KLASS_ID&quot;:&quot;single_article&quot;,&quot;isDirty&quot;:true,&quot;addedAttributes&quot;:[],&quot;deletedAttributes&quot;:[],&quot;modifiedAttributes&quot;:[{&quot;baseType&quot;:&quot;com.cs.runtime.interactor.entity.AttributeInstance&quot;,&quot;id&quot;:&quot;8f44792d-b0d3-4791-ab9f-86a8f16db24e&quot;,&quot;versionId&quot;:0,&quot;versionTimestamp&quot;:1563790033699,&quot;lastModifiedBy&quot;:&quot;admin&quot;,&quot;createdBy&quot;:&quot;admin&quot;,&quot;createdOn&quot;:1563790033696,&quot;lastModified&quot;:1563790033699,&quot;jobId&quot;:null,&quot;klassInstanceVersion&quot;:null,&quot;notification&quot;:null,&quot;klassInstanceId&quot;:&quot;8e4e5a5c-c811-42df-ae53-98187508501f&quot;,&quot;variantInstanceId&quot;:null,&quot;attributeId&quot;:&quot;pid_attribute&quot;,&quot;value&quot;:&quot;wqwr&quot;,&quot;valueAsNumber&quot;:null,&quot;valueAsHtml&quot;:&quot;&quot;,&quot;valueAsExpression&quot;:null,&quot;isMandatoryViolated&quot;:false,&quot;isShouldViolated&quot;:false,&quot;conflictingValues&quot;:[],&quot;isMatchAndMerge&quot;:false,&quot;originalInstanceId&quot;:null,&quot;duplicateStatus&quot;:[],&quot;isUnique&quot;:-1,&quot;isConflictResolved&quot;:false,&quot;code&quot;:&quot;pid_attribute&quot;,&quot;language&quot;:null,&quot;isValueChanged&quot;:true,&quot;addedTags&quot;:[],&quot;modifiedTags&quot;:[],&quot;deletedTags&quot;:[],&quot;modifiedContext&quot;:null},{&quot;baseType&quot;:&quot;com.cs.runtime.interactor.entity.AttributeInstance&quot;,&quot;id&quot;:&quot;fd348085-e2cc-434f-bc60-b6d080e806c8&quot;,&quot;versionId&quot;:0,&quot;versionTimestamp&quot;:1563790033699,&quot;lastModifiedBy&quot;:&quot;admin&quot;,&quot;createdBy&quot;:&quot;admin&quot;,&quot;createdOn&quot;:1563790033696,&quot;lastModified&quot;:1563790033699,&quot;jobId&quot;:null,&quot;klassInstanceVersion&quot;:null,&quot;notification&quot;:null,&quot;klassInstanceId&quot;:${ArtcileID},&quot;variantInstanceId&quot;:null,&quot;attributeId&quot;:&quot;sku_attribute&quot;,&quot;value&quot;:&quot;313&quot;,&quot;valueAsNumber&quot;:null,&quot;valueAsHtml&quot;:&quot;&quot;,&quot;valueAsExpression&quot;:null,&quot;isMandatoryViolated&quot;:false,&quot;isShouldViolated&quot;:false,&quot;conflictingValues&quot;:[],&quot;isMatchAndMerge&quot;:false,&quot;originalInstanceId&quot;:null,&quot;duplicateStatus&quot;:[],&quot;isUnique&quot;:-1,&quot;isConflictResolved&quot;:false,&quot;code&quot;:&quot;sku_attribute&quot;,&quot;language&quot;:null,&quot;isValueChanged&quot;:true,&quot;addedTags&quot;:[],&quot;modifiedTags&quot;:[],&quot;deletedTags&quot;:[],&quot;modifiedContext&quot;:null},{&quot;baseType&quot;:&quot;com.cs.runtime.interactor.entity.AttributeInstance&quot;,&quot;id&quot;:&quot;bfe3eb76-38d8-4f23-8827-4dcdfddecb45&quot;,&quot;versionId&quot;:0,&quot;versionTimestamp&quot;:1563790033696,&quot;lastModifiedBy&quot;:&quot;admin&quot;,&quot;createdBy&quot;:&quot;admin&quot;,&quot;createdOn&quot;:1563790033696,&quot;lastModified&quot;:1563790033696,&quot;jobId&quot;:null,&quot;klassInstanceVersion&quot;:null,&quot;notification&quot;:null,&quot;klassInstanceId&quot;:${ArtcileID},&quot;variantInstanceId&quot;:null,&quot;attributeId&quot;:&quot;nameattribute&quot;,&quot;value&quot;:&quot;Test&quot;,&quot;valueAsNumber&quot;:null,&quot;valueAsHtml&quot;:&quot;&quot;,&quot;valueAsExpression&quot;:null,&quot;isMandatoryViolated&quot;:false,&quot;isShouldViolated&quot;:false,&quot;conflictingValues&quot;:[],&quot;isMatchAndMerge&quot;:false,&quot;originalInstanceId&quot;:null,&quot;duplicateStatus&quot;:[],&quot;isUnique&quot;:-1,&quot;isConflictResolved&quot;:false,&quot;code&quot;:&quot;nameattribute&quot;,&quot;language&quot;:&quot;en_US&quot;,&quot;isValueChanged&quot;:true,&quot;addedTags&quot;:[],&quot;modifiedTags&quot;:[],&quot;deletedTags&quot;:[],&quot;modifiedContext&quot;:null}],&quot;addedTags&quot;:[],&quot;deletedTags&quot;:[],&quot;modifiedTags&quot;:[],&quot;addedRelationships&quot;:[],&quot;deletedRelationships&quot;:[],&quot;modifiedRelationships&quot;:[],&quot;addedNatureRelationships&quot;:[],&quot;deletedNatureRelationships&quot;:[],&quot;modifiedNatureRelationships&quot;:[],&quot;modifiedAssets&quot;:[],&quot;addedLinkedInstances&quot;:[],&quot;deletedLinkedInstances&quot;:[],&quot;getKlassInstanceTreeInfo&quot;:{&quot;attributes&quot;:[],&quot;tags&quot;:[],&quot;allSearch&quot;:&quot;&quot;,&quot;size&quot;:20,&quot;from&quot;:0,&quot;isAttribute&quot;:false,&quot;isNumeric&quot;:false,&quot;selectedRoles&quot;:[],&quot;selectedTypes&quot;:[],&quot;isRed&quot;:false,&quot;isOrange&quot;:false,&quot;isYellow&quot;:false,&quot;isGreen&quot;:false},&quot;tabType&quot;:&quot;com.cs.config.interactor.entity.template.CustomTemplateTab&quot;,&quot;tabId&quot;:&quot;property_collection_tab&quot;,&quot;typeId&quot;:null,&quot;templateId&quot;:null,&quot;isLinked&quot;:true,&quot;isSaveAndPublish&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pxp19-1/runtime/klassinstances/tabs?isRollback=false&amp;sessionId=${sessionId}&amp;requestId=6d8d0d55-d36f-44a0-a5d1-a84226158eae&amp;lang=en_US&amp;organizationId=-1&amp;physicalCatalogId=pim&amp;portalId=pim&amp;endpointId=&amp;endpointType=&amp;dataLanguage=en_US</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">userId</stringProp>
                  <stringProp name="Header.value">730e576b-9203-4f58-a0d6-443596f656f7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">processData</stringProp>
                  <stringProp name="Header.value">${processData}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">6086</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name"></stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
